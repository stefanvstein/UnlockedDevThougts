<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clojure on UnlockedDevThoughts</title>
    <link>http://localhost:1313/tags/clojure/</link>
    <description>Recent content in Clojure on UnlockedDevThoughts</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 May 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/clojure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>REPL: Like art</title>
      <link>http://localhost:1313/posts/repl/</link>
      <pubDate>Sat, 25 May 2013 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/repl/</guid>
      <description>&lt;p&gt;A REPL—short for &lt;em&gt;Read, Eval, Print, Loop&lt;/em&gt;—is the primary development tool in dynamically compiled languages. REPLs are heavily used in languages like Ruby, Python, JavaScript, F#, Scala, Haskell, and especially in the Lisp family of languages. A REPL lets you try out expressions and forms the foundation of test-driven development in its purest form. An editor with a REPL is an IDE in its most minimal and distilled form.&lt;/p&gt;&#xA;&lt;p&gt;Below is a primitive REPL implementation in Clojure, a Lisp dialect:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fibo</title>
      <link>http://localhost:1313/posts/fibo/</link>
      <pubDate>Tue, 18 Dec 2012 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/fibo/</guid>
      <description>&lt;p&gt;In a study group discussing Domain-Driven Design (DDD), someone jokingly remarked that DDD doesn&amp;rsquo;t suit functional programming (FP), saying something along the lines of: &amp;ldquo;Because in FP you use a language where you implement the Fibonacci sequence using recursion.&amp;rdquo; It might have been another typical calculation used to introduce FP concepts. I can’t recall exactly.&lt;/p&gt;&#xA;&lt;p&gt;Anyway, here&amp;rsquo;s an example of calculating Fibonacci in Clojure:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;defn &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;fib&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;fn &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;fibo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cons &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;lazy-seq&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;fibo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;+ &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I don&amp;rsquo;t expect everyone in the study group to follow half of what I&amp;rsquo;m saying here, but for those interested:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
